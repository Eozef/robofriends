{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","searchBox.js","Robots.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","CardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","filteredRobot","this","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"yKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCKCQ,EAVF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAI,YAAYC,IAAG,+BAA0BL,EAA1B,cACxB,6BAAKC,IACL,4BAAIC,QCYDI,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAO,cAAC,EAAD,CACHX,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHHS,MAMtB,OACI,8BACKH,KCAEI,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIW,KAAK,SACLC,YAAY,eACZC,SAAUH,OCRbN,EAAS,CAClB,CACIP,GAAI,EACJC,KAAM,IACNC,MAAO,eAGX,CACIF,GAAI,EACJC,KAAM,IACNC,MAAO,eAGX,CACIF,GAAI,EACJC,KAAM,IACNC,MAAO,eAGX,CACIF,GAAI,EACJC,KAAM,IACNC,MAAO,eAGX,CACIF,GAAI,EACJC,KAAM,IACNC,MAAO,gBCOAe,E,kDA5BX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAP1C,EAAKC,MAAQ,CACTjB,OAAQA,EACRc,YAAa,IAJP,E,qDAaJ,IAAD,OACCI,EAAgBC,KAAKF,MAAMjB,OAAOoB,QAAO,SAAApB,GAC3C,OAAOA,EAAON,KAAK2B,cAAcC,SAAS,EAAKL,MAAMH,gBAEzD,OACI,sBAAKlB,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWU,aAAca,KAAKR,iBAC9B,cAAC,EAAD,CAAUX,OAAQkB,W,GAtBhBK,aCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjD5C,M","file":"static/js/main.9b1095f4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className='tc bg-light-blue dib br4 pa3 ma2 grow bw3 shadow-5'>\r\n            <img alt='roboImage' src={`https://robohash.org/${id}?300x300`}></img>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    const CardArray = robots.map((user, i) => {\r\n        return <Card key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n        />\r\n    })\r\n    return (\r\n        <div>\r\n            {CardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                type='search'\r\n                placeholder='search robos'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","export const robots = [\r\n    {\r\n        id: 1,\r\n        name: 'A',\r\n        email: 'a@gmail.com',\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'B',\r\n        email: 'b@gmail.com',\r\n\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'C',\r\n        email: 'c@gmail.com',\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'D',\r\n        email: 'd@gmail.com',\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'E',\r\n        email: 'e@gmail.com',\r\n\r\n    },\r\n]","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './searchBox';\r\nimport { robots } from './Robots';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: robots,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n\r\n    render() {\r\n        const filteredRobot = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield)\r\n        })\r\n        return (\r\n            <div className=\"tc\">\r\n                <h1>Robo Roster</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <CardList robots={filteredRobot} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}